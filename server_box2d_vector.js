// Generated by CoffeeScript 1.3.3
(function() {
  var V, Vector, b2d, radians_factor;

  radians_factor = Math.PI / 180.0;

  b2d = require('box2dnode');

  Vector = b2d.b2Vec2;

  Vector.prototype.components = function() {
    return [this.x, this.y];
  };

  Vector.prototype.scale = function(scalar) {
    return new Vector(this.x * scalar, this.y * scalar);
  };

  Vector.prototype.Scale = function(scalar) {
    this.x *= scalar;
    return this.y *= scalar;
  };

  Vector.prototype.add = function(other) {
    return this.Copy().Add(other);
  };

  Vector.prototype.subtract = function(other) {
    return this.Copy().Subtract(other);
  };

  Vector.prototype.Rotate = function(angle) {
    return this.MulM(new b2Mat22(angle * radians_factor));
  };

  Vector.prototype.rotate = function(angle) {
    return this.Copy().Rotate(angle);
  };

  V = function() {
    return (function(func, args, ctor) {
      ctor.prototype = func.prototype;
      var child = new ctor, result = func.apply(child, args), t = typeof result;
      return t == "object" || t == "function" ? result || child : child;
    })(Vector, arguments, function(){});
  };

  exports.V = V;

  exports.radians_factor = radians_factor;

  exports.Vector = Vector;

}).call(this);
